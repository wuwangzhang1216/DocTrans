version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - REDIS_URL=${REDIS_URL}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - FRONTEND_URL=http://localhost:3000
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-10485760}
      - WORKER_CONCURRENCY=${WORKER_CONCURRENCY:-5}
      - JOB_TIMEOUT=${JOB_TIMEOUT:-600000}
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/outputs:/app/outputs
      - ../.env:/app/.env:ro
    depends_on:
      - worker
    networks:
      - translate-network

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - REDIS_URL=${REDIS_URL}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - WORKER_CONCURRENCY=${WORKER_CONCURRENCY:-5}
    volumes:
      - ./backend/uploads:/app/backend/uploads
      - ./backend/outputs:/app/backend/outputs
      - ../translate_doc.py:/app/translate_doc.py
      - ../.env:/app/.env:ro
    deploy:
      replicas: 2
    networks:
      - translate-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3001
    depends_on:
      - backend
    networks:
      - translate-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - translate-network

networks:
  translate-network:
    driver: bridge